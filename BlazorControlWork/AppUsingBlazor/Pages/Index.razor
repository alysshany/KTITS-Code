@page "/"
@using AppUsingBlazor.Data;
<PageTitle>Index</PageTitle>
@inject NavigationManager Navigation
@inject ILocalStorageService storageService
@inject UsersComp usc
<h1>Hello, User!</h1>

<div class="card">
    <h4 class="card-header">Registration Page</h4>
    <div class="card-body">
        <EditForm Model="@userMod">
        <DataAnnotationsValidator />
        <ValidationSummary />

            <hr>
                <label for="email"><b>Name</b></label>
                <InputText placeholder="Enter Name" name="name" id="name" required @bind-Value="userMod.Name" />
                <br/>
                <label for="email"><b>Surname</b></label>
                <InputText  type="text" placeholder="Enter Surname" name="surname" id="surname" @bind-Value="userMod.Surname" />
                <br/>
                <label for="email"><b>Email</b></label>
                <InputText type="text" placeholder="Enter Email" name="email" id="email" required @bind-Value="userMod.Email" />
                <br/>
                <label for="email"><b>Login</b></label>
                <InputText type="text" placeholder="Enter Login" name="login" id="login" required @bind-Value="userMod.Login" />
                <br/>
                <label for="psw"><b>Password</b></label>
                <InputText type="password" placeholder="Enter Password" name="psw" id="psw" required @bind-Value="userMod.Password" />
                <br/>
                <label for="psw-repeat"><b>Repeat Password</b></label>
                <InputText type="password" placeholder="Enter Password" name="psw" id="psw" required @bind-Value="userMod.RepPassword" />
            <hr>

            <button type="submit" class="registerbtn" @onclick="Registrarion">Registration</button>
            <button type="submit" class="registerbtn" @onclick="Login">To Login</button>
        </EditForm>
    </div>
</div>

@code {
    private User userMod = new User();

    private async void Registrarion()
    {
        if (userMod.Login != null && userMod.Password != null && userMod.Name != null && userMod.Surname != null && userMod.Email != null)
        {
            if (userMod.Password == userMod.RepPassword)
            {
                DBConnection.AddToDataBase(userMod);
                usc.currentUser = userMod;
                Navigation.NavigateTo("/counter");
                await storageService.SetAsync<User>("Autho", usc.currentUser);
            }
        }
        StateHasChanged();
    }
    private void Login()
    {
        Navigation.NavigateTo("/login");
    }
}
